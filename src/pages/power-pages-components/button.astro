---
import {
  defaultButton,
  buttonPill,
  gradientButton,
  buttonWithIcon,
} from "@data/button.ts";
import DefaultButton from "@components/buttons/DefaultButton.astro";
import ButtonPill from "@components/buttons/ButtonPill.astro";
import GradientButton from "@components/buttons/GradientButton.astro";
import ButtonWithIcon from "@components/buttons/ButtonWithIcon.astro";
import Article from "@components/Article.astro";
import CodeBlock from "@components/CodeBlock.astro";
import Content from "@layouts/Content.astro";
import Header from "@components/Header.astro";
import Heading from "@components/Heading.astro";
import Layout from "@layouts/Layout.astro";
import Preview from "@components/Preview.astro";
import Prose from "@components/Prose.astro";
import Sidebar from "@layouts/Sidebar.astro";
import Text from "@components/Text.astro";
import Tab from "@components/Tab.astro";
import TabItem from "@components/TabItem.astro";
---

<Layout title="Power Pages Components - Button">
  <Header />
  <Sidebar />
  <Content>
    <section>
      <Article>
        <Heading
          slot="header"
          level={1}
          gradient
          class="inline-block"
          text="Button"
        />
        <Prose>
          <Text>
            The button component is a versatile UI element for triggering
            actions or navigating through your application. Below are the
            available configurations and usage examples.
          </Text>
        </Prose>
        <Prose>
          <Heading level={2} text="Copy & Paste code" />
          <Text>
            To use the Button component, first copy the code and paste it into a
            Web Template.
          </Text>
        </Prose>
        <Prose>
          <Heading level={2} text="Usage" />
          <Text>
            The button component can be easily added to your project. Below are
            various use cases.
          </Text>
          <Heading level={3} text="Default Button" />
          <Tab tabs={[{ label: "Preview", active: true }, { label: "Code" }]}>
            <TabItem active>
              <Preview>
                <DefaultButton />
              </Preview>
            </TabItem>
            <TabItem>
              <CodeBlock lang="html" code={defaultButton} />
            </TabItem>
          </Tab>
          <Heading level={3} text="Button Pill" />
          <Text>
            The button pills can be used as an alternative style by using fully
            rounded edges.
          </Text>
          <Tab tabs={[{ label: "Preview", active: true }, { label: "Code" }]}>
            <TabItem active>
              <Preview>
                <div class="flex items-center flex-wrap gap-4">
                  <ButtonPill />
                </div>
              </Preview>
            </TabItem>
            <TabItem>
              <CodeBlock lang="html" code={buttonPill} />
            </TabItem>
          </Tab>
          <Heading level={3} text="Gradient Button" />
          <Text>
            These buttons use a style that includes two contrasted colors
            creating an impressive mesh gradient effect.
          </Text>
          <Tab tabs={[{ label: "Preview", active: true }, { label: "Code" }]}>
            <TabItem active>
              <Preview>
                <div class="flex items-center flex-wrap gap-4">
                  <GradientButton />
                </div>
              </Preview>
            </TabItem>
            <TabItem>
              <CodeBlock lang="html" code={gradientButton} />
            </TabItem>
          </Tab>
          <Heading level={3} text="Button with icons" />
          <Text>
            Use the following examples to add a SVG icon inside the button
            either on the left or right side.
          </Text>
          <Tab tabs={[{ label: "Preview", active: true }, { label: "Code" }]}>
            <TabItem active>
              <Preview>
                <div class="flex items-center flex-wrap gap-4">
                  <ButtonWithIcon />
                </div>
              </Preview>
            </TabItem>
            <TabItem>
              <CodeBlock lang="html" code={buttonWithIcon} />
            </TabItem>
          </Tab>
        </Prose>
      </Article>
    </section>
  </Content>
</Layout>

<style>
  .custom-button {
    --ac-btn-border-radius: 999px;
    --ac-btn-font-weight: 600;
    border-width: 0;
    background-image: linear-gradient(
      90deg,
      rgb(var(--ac-primary)) 0%,
      rgb(var(--ac-secondary)) 100%
    );
  }
</style>
